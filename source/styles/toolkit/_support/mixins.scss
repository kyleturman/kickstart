@import "variables";

// -------------------------------
// Utilities
// -------------------------------

// Clearfix
@mixin clearfix {
    &:before, &:after {
        content: " ";
        display: table;
    }

    &:after { clear: both; }
}


// -------------------------------
// Media Queries
// -------------------------------

// Params:
//

// Breakpoint
@mixin breakpoint($name, $direction: only) {

    $index: index(map-keys($breakpoints), $name);
    $size-query: "";

    // Thow error if trying to do smallest down
    @if $direction == down and index == 0 {
        @error "Can't use 'down' direction for smallest breakpoint width";

    // Breakpoint, Down
    } @else if $direction == down {
        $size-query: "(min-width: 0) and (max-width: #{map-get($breakpoints, $name)} - 1)";

    // Breakpoint, Up and Only if last breakpoint
    } @else if ($direction == up) or ($direction == only and length($breakpoints) < $index + 1) {
        $size-query: (min-width: map-get($breakpoints, $name));

    // Breakpoint, Only
    } @else if $direction == only {
        $next-breakpoint-name: nth(map-keys($breakpoints), $index + 1);
        $size-query: "(min-width: #{map-get($breakpoints, $name)}) and (max-width: #{map-get($breakpoints, $next-breakpoint-name) - 1})";
    }

    @media only screen and #{$size-query} {
        @content;
    }
}

// HiDPI for retina screens
@mixin hidpi {
    @media (-webkit-min-device-pixel-ratio: 1.3),
           (-o-min-device-pixel-ratio: 2.6/2),
           (min--moz-device-pixel-ratio: 1.3),
           (min-device-pixel-ratio: 1.3),
           (min-resolution: 1.3dppx) {

           @content;
    }
}
